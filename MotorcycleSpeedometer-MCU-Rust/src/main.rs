//==============================================================================
// Notes
//==============================================================================
// main.rs

//==============================================================================
// Crates and Mods
//==============================================================================
#![no_std]
#![no_main]

use cortex_m_rt::entry;
use panic_halt as _; // Breakpoint on `rust_begin_unwind` to catch panics

mod config;
mod drivers;
use drivers::*;
mod mcu;

//==============================================================================
// Enums, Structs, and Types
//==============================================================================


//==============================================================================
// Variables
//==============================================================================


//==============================================================================
// Main
//==============================================================================
#[entry]
fn main() -> ! {

	init();
	
	let mut device_info = app::DeviceInfo::take().unwrap();

	loop {
		task_handler(&mut device_info);
	};
}

//==============================================================================
// Private Functions
//==============================================================================
fn init() {
	mcu::init(mcu::rtc::WakeInterval::Interval250MS);
}

//==============================================================================
// Task Handler
//==============================================================================
fn task_handler(d: &mut app::DeviceInfo) {
	mcu::task_handler(d);
}
